{"ast":null,"code":"import { checkToken, login, logout } from \"@/api/user\";\nimport storage from \"@/utils/storage\";\nimport { actions, mutations, session } from \"@/constant\";\nimport router from \"@/route\";\nimport { ElMessage } from \"element-plus\";\nconst user = {\n  state: {\n    userName: '',\n    nickName: '',\n    token: ''\n  },\n  getters: {\n    isLogin(state) {\n      return state.userName !== '' && state.token !== '';\n    }\n\n  },\n  mutations: {\n    [mutations.SAVE_USER_NAME](state, userName) {\n      state.userName = userName;\n    },\n\n    [mutations.SAVE_NICK_NAME](state, nickName) {\n      state.nickName = nickName;\n    },\n\n    [mutations.SAVE_TOKEN](state, token) {\n      state.token = token;\n    }\n\n  },\n  actions: {\n    [actions.LOGIN]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        login(user).then(resp => {\n          storage.saveSessionObject(session.SESSION_USER_TAG, resp.data);\n          commit(mutations.SAVE_USER_NAME, resp.data.user.userName);\n          commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName);\n          commit(mutations.SAVE_TOKEN, resp.data.token);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.LOGOUT]({\n      dispatch,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        logout().then(resp => {\n          dispatch(actions.EMPTY);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.RESTORE]({\n      dispatch,\n      commit\n    }) {\n      // 先检查token是否合法\n      checkToken().then(resp => {\n        return new Promise(resolve => {\n          resolve(resp);\n        });\n      }).then(resp => {\n        console.log('resp: ' + resp.status); // 合法则恢复\n\n        if (resp.status === 200) {\n          let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\n\n          if (loginUser !== null && loginUser !== '') {\n            console.log(loginUser);\n            commit(mutations.SAVE_USER_NAME, loginUser.user.userName);\n            commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName);\n            commit(mutations.SAVE_TOKEN, loginUser.token);\n          }\n        } else {\n          // 不合法则清空\n          dispatch(actions.EMPTY);\n        }\n      }).catch(error => {\n        ElMessage.error('身份认证失效，请重新登录');\n        router.push({\n          name: 'login'\n        });\n      });\n    },\n\n    [actions.EMPTY]({\n      commit\n    }) {\n      storage.remove(session.SESSION_USER_TAG);\n      commit(mutations.SAVE_USER_NAME, '');\n      commit(mutations.SAVE_NICK_NAME, '');\n      commit(mutations.SAVE_TOKEN, '');\n    }\n\n  }\n};\nexport default user;","map":{"version":3,"sources":["E:/学习/项目/元动力ssm小项目/website-ui/src/store/modules/user.js"],"names":["checkToken","login","logout","storage","actions","mutations","session","router","ElMessage","user","state","userName","nickName","token","getters","isLogin","SAVE_USER_NAME","SAVE_NICK_NAME","SAVE_TOKEN","LOGIN","commit","Promise","resolve","reject","then","resp","saveSessionObject","SESSION_USER_TAG","data","catch","error","LOGOUT","dispatch","EMPTY","RESTORE","console","log","status","loginUser","getSessionObject","push","name","remove"],"mappings":"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","sourcesContent":["import {checkToken, login, logout} from \"@/api/user\"\r\nimport storage from \"@/utils/storage\";\r\nimport {actions, mutations, session} from \"@/constant\";\r\nimport router from \"@/route\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst user = {\r\n    state: {\r\n        userName: '',\r\n        nickName: '',\r\n        token: ''\r\n    },\r\n    getters: {\r\n        isLogin(state) {\r\n            return state.userName !== '' && state.token !== ''\r\n        }\r\n    },\r\n    mutations: {\r\n        [mutations.SAVE_USER_NAME](state, userName) {\r\n            state.userName = userName\r\n        },\r\n        [mutations.SAVE_NICK_NAME](state, nickName) {\r\n            state.nickName = nickName\r\n        },\r\n        [mutations.SAVE_TOKEN](state, token) {\r\n            state.token = token\r\n        },\r\n    },\r\n    actions: {\r\n        [actions.LOGIN]({commit}, user) {\r\n            return new Promise((resolve, reject) => {\r\n                login(user).then(resp => {\r\n                    storage.saveSessionObject(session.SESSION_USER_TAG, resp.data)\r\n                    commit(mutations.SAVE_USER_NAME, resp.data.user.userName)\r\n                    commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName)\r\n                    commit(mutations.SAVE_TOKEN, resp.data.token)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.LOGOUT]({dispatch, commit}) {\r\n            return new Promise((resolve, reject) => {\r\n                logout().then(resp => {\r\n                    dispatch(actions.EMPTY)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.RESTORE]({dispatch, commit}) {\r\n            // 先检查token是否合法\r\n            checkToken().then(resp => {\r\n                return new Promise(resolve => {\r\n                    resolve(resp)\r\n                })\r\n            }).then(resp => {\r\n                console.log('resp: ' + resp.status)\r\n                // 合法则恢复\r\n                if (resp.status === 200) {\r\n\r\n                    let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\r\n                    if (loginUser !== null && loginUser !== '') {\r\n                        console.log(loginUser)\r\n                        commit(mutations.SAVE_USER_NAME, loginUser.user.userName)\r\n                        commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName)\r\n                        commit(mutations.SAVE_TOKEN, loginUser.token)\r\n                    }\r\n                } else {\r\n                    // 不合法则清空\r\n                    dispatch(actions.EMPTY)\r\n                }\r\n            }).catch(error => {\r\n                ElMessage.error('身份认证失效，请重新登录')\r\n                router.push({name: 'login'})\r\n            })\r\n        },\r\n        [actions.EMPTY]({commit}) {\r\n            storage.remove(session.SESSION_USER_TAG)\r\n            commit(mutations.SAVE_USER_NAME, '')\r\n            commit(mutations.SAVE_NICK_NAME, '')\r\n            commit(mutations.SAVE_TOKEN, '')\r\n        }\r\n    }\r\n}\r\n\r\nexport default user"]},"metadata":{},"sourceType":"module"}