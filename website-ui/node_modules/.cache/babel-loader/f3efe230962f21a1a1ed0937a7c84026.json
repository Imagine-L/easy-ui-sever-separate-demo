{"ast":null,"code":"import { login, logout } from \"@/api/user\";\nimport storage from \"@/utils/storage\";\nimport { actions, mutations, session } from \"@/constant\";\nconst user = {\n  state: {\n    userName: '',\n    nickName: '',\n    token: ''\n  },\n  getters: {\n    isLogin(state) {\n      return state.userName !== '' && state.token !== '';\n    }\n\n  },\n  mutations: {\n    [mutations.SAVE_USER_NAME](state, userName) {\n      state.userName = userName;\n    },\n\n    [mutations.SAVE_NICK_NAME](state, nickName) {\n      state.nickName = nickName;\n    },\n\n    [mutations.SAVE_TOKEN](state, token) {\n      // console.log('检测到token: ' + token)\n      state.token = token;\n    },\n\n    [mutations.RESTORE](state) {}\n\n  },\n  actions: {\n    [actions.LOGIN]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        login(user).then(resp => {\n          storage.saveSessionObject(session.SESSION_USER_TAG, resp.data);\n          commit(mutations.SAVE_USER_NAME, resp.data.user.userName);\n          commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName);\n          commit(mutations.SAVE_TOKEN, resp.data.token);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.LOGOUT]({\n      commit\n    }) {\n      return new Promise(resolve => {\n        logout().then(resp => {\n          storage.remove(session.SESSION_USER_TAG);\n          commit(mutations.SAVE_USER_NAME, '');\n          commit(mutations.SAVE_NICK_NAME, '');\n          commit(mutations.SAVE_TOKEN, '');\n          resolve(resp);\n        });\n      });\n    },\n\n    [actions.RESTORE]({\n      commit\n    }) {\n      let loginUser = storage.getSessionString(session.SESSION_USER_TAG);\n\n      if (loginUser !== null && loginUser !== '') {\n        commit(mutations.SAVE_USER_NAME, loginUser.user.userName);\n        commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName);\n        commit(mutations.SAVE_TOKEN, loginUser.token);\n      }\n    }\n\n  }\n};\nexport default user;","map":{"version":3,"sources":["E:/学习/项目/元动力ssm小项目/website-ui/src/store/modules/user.js"],"names":["login","logout","storage","actions","mutations","session","user","state","userName","nickName","token","getters","isLogin","SAVE_USER_NAME","SAVE_NICK_NAME","SAVE_TOKEN","RESTORE","LOGIN","commit","Promise","resolve","reject","then","resp","saveSessionObject","SESSION_USER_TAG","data","catch","error","LOGOUT","remove","loginUser","getSessionString"],"mappings":"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","sourcesContent":["import {login, logout} from \"@/api/user\"\r\nimport storage from \"@/utils/storage\";\r\nimport {actions, mutations, session} from \"@/constant\";\r\n\r\nconst user = {\r\n    state: {\r\n        userName: '',\r\n        nickName: '',\r\n        token: ''\r\n    },\r\n    getters: {\r\n        isLogin(state) {\r\n            return state.userName !== '' && state.token !== ''\r\n        }\r\n    },\r\n    mutations: {\r\n        [mutations.SAVE_USER_NAME](state, userName) {\r\n            state.userName = userName\r\n        },\r\n        [mutations.SAVE_NICK_NAME](state, nickName) {\r\n            state.nickName = nickName\r\n        },\r\n        [mutations.SAVE_TOKEN](state, token) {\r\n            // console.log('检测到token: ' + token)\r\n            state.token = token\r\n        },\r\n        [mutations.RESTORE](state) {\r\n\r\n        }\r\n    },\r\n    actions: {\r\n        [actions.LOGIN]({commit}, user) {\r\n            return new Promise((resolve, reject) => {\r\n                login(user).then(resp => {\r\n                    storage.saveSessionObject(session.SESSION_USER_TAG, resp.data)\r\n                    commit(mutations.SAVE_USER_NAME, resp.data.user.userName)\r\n                    commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName)\r\n                    commit(mutations.SAVE_TOKEN, resp.data.token)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.LOGOUT]({commit}) {\r\n            return new Promise(resolve => {\r\n                logout().then(resp => {\r\n                    storage.remove(session.SESSION_USER_TAG)\r\n                    commit(mutations.SAVE_USER_NAME, '')\r\n                    commit(mutations.SAVE_NICK_NAME, '')\r\n                    commit(mutations.SAVE_TOKEN, '')\r\n                    resolve(resp)\r\n                })\r\n            })\r\n        },\r\n        [actions.RESTORE]({commit}) {\r\n            let loginUser = storage.getSessionString(session.SESSION_USER_TAG);\r\n            if (loginUser !== null && loginUser !== '') {\r\n                commit(mutations.SAVE_USER_NAME, loginUser.user.userName)\r\n                commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName)\r\n                commit(mutations.SAVE_TOKEN, loginUser.token)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default user"]},"metadata":{},"sourceType":"module"}