{"ast":null,"code":"import { onMounted } from \"vue\";\nimport { useRouter } from 'vue-router';\nimport storage from \"@/utils/storage\";\nimport { session } from \"@/constant\";\nimport { toMain } from \"@/api/user\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n\n    const getPageName = async () => {\n      return new Promise((resolve, reject) => {\n        toMain().then(resp => {\n          if (resp.status >= 200 && resp < 300) {\n            resolve('main');\n          } else {\n            resolve('login');\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    };\n\n    onMounted(async () => {\n      let pageName = 'login';\n\n      if (storage.sessionKeyIsEmpty(session.SESSION_USER_TAG)) {\n        pageName = await getPageName();\n        console.log(pageName); // router.push({name: pageName})\n      }\n    });\n    const __returned__ = {\n      router,\n      getPageName,\n      onMounted,\n      useRouter,\n      storage,\n      session,\n      toMain\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAKA,SAAQA,SAAR,QAAwB,KAAxB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,YAArB;;;;;;AAEA,UAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAEA,UAAMK,WAAW,GAAG,YAAY;AAC9B,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCL,cAAM,GAAGM,IAAT,CAAcC,IAAI,IAAI;AACpB,cAAIA,IAAI,CAACC,MAAL,IAAe,GAAf,IAAsBD,IAAI,GAAG,GAAjC,EAAsC;AACpCH,mBAAO,CAAC,MAAD,CAAP;AACD,WAFD,MAEO;AACLA,mBAAO,CAAC,OAAD,CAAP;AACD;AACF,SAND,EAMGK,KANH,CAMSC,KAAK,IAAI;AAChBL,gBAAM,CAACK,KAAD,CAAN;AACD,SARD;AASD,OAVM,CAAP;AAYD,KAbD;;AAeAd,aAAS,CAAC,YAAY;AACpB,UAAIe,QAAQ,GAAG,OAAf;;AACA,UAAIb,OAAO,CAACc,iBAAR,CAA0Bb,OAAO,CAACc,gBAAlC,CAAJ,EAAyD;AACvDF,gBAAQ,GAAG,MAAMT,WAAW,EAA5B;AACAY,eAAO,CAACC,GAAR,CAAYJ,QAAZ,EAFuD,CAGvD;AACD;AACF,KAPQ,CAAT","names":["onMounted","useRouter","storage","session","toMain","router","getPageName","Promise","resolve","reject","then","resp","status","catch","error","pageName","sessionKeyIsEmpty","SESSION_USER_TAG","console","log"],"sources":["E:/学习/项目/元动力ssm小项目/website-ui/src/App.vue"],"sourcesContent":["<template>\n  <router-view></router-view>\n</template>\n\n<script setup>\nimport {onMounted} from \"vue\";\nimport {useRouter} from 'vue-router'\nimport storage from \"@/utils/storage\";\nimport {session} from \"@/constant\";\nimport {toMain} from \"@/api/user\";\n\nconst router = useRouter();\n\nconst getPageName = async () => {\n  return new Promise((resolve, reject) => {\n    toMain().then(resp => {\n      if (resp.status >= 200 && resp < 300) {\n        resolve('main')\n      } else {\n        resolve('login')\n      }\n    }).catch(error => {\n      reject(error)\n    })\n  })\n\n}\n\nonMounted(async () => {\n  let pageName = 'login'\n  if (storage.sessionKeyIsEmpty(session.SESSION_USER_TAG)) {\n    pageName = await getPageName()\n    console.log(pageName)\n    // router.push({name: pageName})\n  }\n})\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}