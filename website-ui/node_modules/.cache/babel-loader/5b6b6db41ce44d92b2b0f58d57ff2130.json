{"ast":null,"code":"import { checkToken, getUserInfo, login, logout } from \"@/api/user\";\nimport storage from \"@/utils/storage\";\nimport { actions, mutations, session } from \"@/constant\";\nimport router from \"@/route\";\nimport { ElMessage } from \"element-plus\";\nconst user = {\n  state: {\n    userName: '',\n    nickName: '',\n    token: '',\n    perms: [],\n    roles: []\n  },\n  getters: {\n    isLogin(state) {\n      return state.userName !== '' && state.token !== '';\n    },\n\n    permissions(state) {\n      return state.perms;\n    },\n\n    roles(state) {\n      console.log('获取permissions');\n      return state.roles;\n    }\n\n  },\n  mutations: {\n    [mutations.SAVE_USER_NAME](state, userName) {\n      state.userName = userName;\n    },\n\n    [mutations.SAVE_NICK_NAME](state, nickName) {\n      state.nickName = nickName;\n    },\n\n    [mutations.SAVE_TOKEN](state, token) {\n      state.token = token;\n    },\n\n    [mutations.SAVE_PERMS](state, perms) {\n      console.log(\"perms:\");\n      console.log(perms);\n      state.perms = perms;\n    },\n\n    [mutations.SAVE_ROLES](state, roles) {\n      console.log(\"roles:\");\n      console.log(roles);\n      state.perms = roles;\n    }\n\n  },\n  actions: {\n    [actions.LOGIN]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        login(user).then(resp => {\n          storage.saveSessionObject(session.SESSION_USER_TAG, resp.data);\n          commit(mutations.SAVE_USER_NAME, resp.data.user.userName);\n          commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName);\n          commit(mutations.SAVE_TOKEN, resp.data.token);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.LOGOUT]({\n      dispatch,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        logout().then(resp => {\n          dispatch(actions.EMPTY);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    // 从session中恢复数据\n    [actions.RESTORE]({\n      dispatch,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        // 先检查token是否合法\n        checkToken().then(resp => {\n          return new Promise(resolve => {\n            resolve(resp);\n          });\n        }).then(resp => {\n          // 合法则恢复\n          if (resp.status === 200) {\n            let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\n\n            if (loginUser !== null && loginUser !== '') {\n              console.log(loginUser);\n              commit(mutations.SAVE_USER_NAME, loginUser.user.userName);\n              commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName);\n              commit(mutations.SAVE_TOKEN, loginUser.token);\n            }\n          } else {\n            // 不合法则清空\n            dispatch(actions.EMPTY);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.EMPTY]({\n      commit\n    }) {\n      storage.remove(session.SESSION_USER_TAG);\n      commit(mutations.SAVE_USER_NAME, '');\n      commit(mutations.SAVE_NICK_NAME, '');\n      commit(mutations.SAVE_TOKEN, '');\n    },\n\n    [actions.GET_USER_INFO]({\n      commit\n    }) {\n      return new Promise(resolve => {\n        getUserInfo().then(resp => {\n          commit(mutations.SAVE_ROLES, resp.data.roles);\n          commit(mutations.SAVE_PERMS, resp.data.perms);\n          resolve();\n        });\n      });\n    }\n\n  }\n};\nexport default user;","map":{"version":3,"sources":["E:/学习/项目/元动力ssm小项目/website-ui/src/store/modules/user.js"],"names":["checkToken","getUserInfo","login","logout","storage","actions","mutations","session","router","ElMessage","user","state","userName","nickName","token","perms","roles","getters","isLogin","permissions","console","log","SAVE_USER_NAME","SAVE_NICK_NAME","SAVE_TOKEN","SAVE_PERMS","SAVE_ROLES","LOGIN","commit","Promise","resolve","reject","then","resp","saveSessionObject","SESSION_USER_TAG","data","catch","error","LOGOUT","dispatch","EMPTY","RESTORE","status","loginUser","getSessionObject","remove","GET_USER_INFO"],"mappings":"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","sourcesContent":["import {checkToken, getUserInfo, login, logout} from \"@/api/user\"\r\nimport storage from \"@/utils/storage\";\r\nimport {actions, mutations, session} from \"@/constant\";\r\nimport router from \"@/route\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst user = {\r\n    state: {\r\n        userName: '',\r\n        nickName: '',\r\n        token: '',\r\n        perms: [],\r\n        roles: []\r\n    },\r\n    getters: {\r\n        isLogin(state) {\r\n            return state.userName !== '' && state.token !== ''\r\n        },\r\n        permissions(state) {\r\n            return state.perms\r\n        },\r\n        roles(state) {\r\n            console.log('获取permissions')\r\n            return state.roles\r\n        }\r\n    },\r\n    mutations: {\r\n        [mutations.SAVE_USER_NAME](state, userName) {\r\n            state.userName = userName\r\n        },\r\n        [mutations.SAVE_NICK_NAME](state, nickName) {\r\n            state.nickName = nickName\r\n        },\r\n        [mutations.SAVE_TOKEN](state, token) {\r\n            state.token = token\r\n        },\r\n        [mutations.SAVE_PERMS](state, perms) {\r\n            console.log(\"perms:\")\r\n            console.log(perms)\r\n            state.perms = perms\r\n        },\r\n        [mutations.SAVE_ROLES](state, roles) {\r\n            console.log(\"roles:\")\r\n            console.log(roles)\r\n            state.perms = roles\r\n        },\r\n    },\r\n    actions: {\r\n        [actions.LOGIN]({commit}, user) {\r\n            return new Promise((resolve, reject) => {\r\n                login(user).then(resp => {\r\n                    storage.saveSessionObject(session.SESSION_USER_TAG, resp.data)\r\n                    commit(mutations.SAVE_USER_NAME, resp.data.user.userName)\r\n                    commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName)\r\n                    commit(mutations.SAVE_TOKEN, resp.data.token)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.LOGOUT]({dispatch, commit}) {\r\n            return new Promise((resolve, reject) => {\r\n                logout().then(resp => {\r\n                    dispatch(actions.EMPTY)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        // 从session中恢复数据\r\n        [actions.RESTORE]({dispatch, commit}) {\r\n            return new Promise((resolve, reject) => {\r\n                // 先检查token是否合法\r\n                checkToken().then(resp => {\r\n                    return new Promise(resolve => {\r\n                        resolve(resp)\r\n                    })\r\n                }).then(resp => {\r\n                    // 合法则恢复\r\n                    if (resp.status === 200) {\r\n                        let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\r\n                        if (loginUser !== null && loginUser !== '') {\r\n                            console.log(loginUser)\r\n                            commit(mutations.SAVE_USER_NAME, loginUser.user.userName)\r\n                            commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName)\r\n                            commit(mutations.SAVE_TOKEN, loginUser.token)\r\n                        }\r\n                    } else {\r\n                        // 不合法则清空\r\n                        dispatch(actions.EMPTY)\r\n                    }\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.EMPTY]({commit}) {\r\n            storage.remove(session.SESSION_USER_TAG)\r\n            commit(mutations.SAVE_USER_NAME, '')\r\n            commit(mutations.SAVE_NICK_NAME, '')\r\n            commit(mutations.SAVE_TOKEN, '')\r\n        },\r\n        [actions.GET_USER_INFO]({commit}) {\r\n            return new Promise(resolve => {\r\n                getUserInfo().then(resp => {\r\n                    commit(mutations.SAVE_ROLES, resp.data.roles)\r\n                    commit(mutations.SAVE_PERMS, resp.data.perms)\r\n                    resolve()\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default user"]},"metadata":{},"sourceType":"module"}