{"ast":null,"code":"import { checkToken, getUserInfo, login, logout } from \"@/api/user\";\nimport storage from \"@/utils/storage\";\nimport { actions, mutations, session } from \"@/constant\";\nimport router from \"@/route\";\nimport { ElMessage } from \"element-plus\";\nconst user = {\n  state: {\n    userName: '',\n    nickName: '',\n    token: ''\n  },\n  getters: {\n    isLogin(state) {\n      return state.userName !== '' && state.token !== '';\n    }\n\n  },\n  mutations: {\n    [mutations.SAVE_USER_NAME](state, userName) {\n      state.userName = userName;\n    },\n\n    [mutations.SAVE_NICK_NAME](state, nickName) {\n      state.nickName = nickName;\n    },\n\n    [mutations.SAVE_TOKEN](state, token) {\n      console.log(token);\n      state.token = token;\n    }\n\n  },\n  actions: {\n    [actions.LOGIN]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        login(user).then(resp => {\n          storage.saveSessionObject(session.SESSION_USER_TAG, resp.data);\n          commit(mutations.SAVE_USER_NAME, resp.data.user.userName);\n          commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName);\n          commit(mutations.SAVE_TOKEN, resp.data.token);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.LOGOUT]({\n      dispatch,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        logout().then(resp => {\n          dispatch(actions.EMPTY);\n          resolve(resp);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    // 从session中恢复数据\n    [actions.RESTORE]({\n      dispatch,\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        // 先检查token是否合法\n        checkToken().then(resp => {\n          return new Promise(resolve => {\n            resolve(resp);\n          });\n        }).then(resp => {\n          // 合法则恢复\n          if (resp.status === 200) {\n            let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\n\n            if (loginUser !== null && loginUser !== '') {\n              console.log(loginUser);\n              commit(mutations.SAVE_USER_NAME, loginUser.user.userName);\n              commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName);\n              commit(mutations.SAVE_TOKEN, loginUser.token);\n            }\n          } else {\n            // 不合法则清空\n            dispatch(actions.EMPTY);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n\n    [actions.EMPTY]({\n      commit\n    }) {\n      storage.remove(session.SESSION_USER_TAG);\n      commit(mutations.SAVE_USER_NAME, '');\n      commit(mutations.SAVE_NICK_NAME, '');\n      commit(mutations.SAVE_TOKEN, '');\n    },\n\n    [actions.GET_USER_INFO]({\n      commit\n    }) {\n      getUserInfo().then(resp => {});\n    }\n\n  }\n};\nexport default user;","map":{"version":3,"sources":["E:/学习/项目/元动力ssm小项目/website-ui/src/store/modules/user.js"],"names":["checkToken","getUserInfo","login","logout","storage","actions","mutations","session","router","ElMessage","user","state","userName","nickName","token","getters","isLogin","SAVE_USER_NAME","SAVE_NICK_NAME","SAVE_TOKEN","console","log","LOGIN","commit","Promise","resolve","reject","then","resp","saveSessionObject","SESSION_USER_TAG","data","catch","error","LOGOUT","dispatch","EMPTY","RESTORE","status","loginUser","getSessionObject","remove","GET_USER_INFO"],"mappings":"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","sourcesContent":["import {checkToken, getUserInfo, login, logout} from \"@/api/user\"\r\nimport storage from \"@/utils/storage\";\r\nimport {actions, mutations, session} from \"@/constant\";\r\nimport router from \"@/route\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nconst user = {\r\n    state: {\r\n        userName: '',\r\n        nickName: '',\r\n        token: ''\r\n    },\r\n    getters: {\r\n        isLogin(state) {\r\n            return state.userName !== '' && state.token !== ''\r\n        }\r\n    },\r\n    mutations: {\r\n        [mutations.SAVE_USER_NAME](state, userName) {\r\n            state.userName = userName\r\n        },\r\n        [mutations.SAVE_NICK_NAME](state, nickName) {\r\n            state.nickName = nickName\r\n        },\r\n        [mutations.SAVE_TOKEN](state, token) {\r\n            console.log(token)\r\n            state.token = token\r\n        },\r\n    },\r\n    actions: {\r\n        [actions.LOGIN]({commit}, user) {\r\n            return new Promise((resolve, reject) => {\r\n                login(user).then(resp => {\r\n                    storage.saveSessionObject(session.SESSION_USER_TAG, resp.data)\r\n                    commit(mutations.SAVE_USER_NAME, resp.data.user.userName)\r\n                    commit(mutations.SAVE_NICK_NAME, resp.data.user.nickName)\r\n                    commit(mutations.SAVE_TOKEN, resp.data.token)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.LOGOUT]({dispatch, commit}) {\r\n            return new Promise((resolve, reject) => {\r\n                logout().then(resp => {\r\n                    dispatch(actions.EMPTY)\r\n                    resolve(resp)\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        // 从session中恢复数据\r\n        [actions.RESTORE]({dispatch, commit}) {\r\n            return new Promise((resolve, reject) => {\r\n                // 先检查token是否合法\r\n                checkToken().then(resp => {\r\n                    return new Promise(resolve => {\r\n                        resolve(resp)\r\n                    })\r\n                }).then(resp => {\r\n                    // 合法则恢复\r\n                    if (resp.status === 200) {\r\n                        let loginUser = storage.getSessionObject(session.SESSION_USER_TAG);\r\n                        if (loginUser !== null && loginUser !== '') {\r\n                            console.log(loginUser)\r\n                            commit(mutations.SAVE_USER_NAME, loginUser.user.userName)\r\n                            commit(mutations.SAVE_NICK_NAME, loginUser.user.nickName)\r\n                            commit(mutations.SAVE_TOKEN, loginUser.token)\r\n                        }\r\n                    } else {\r\n                        // 不合法则清空\r\n                        dispatch(actions.EMPTY)\r\n                    }\r\n                }).catch(error => {\r\n                    reject(error)\r\n                })\r\n            })\r\n        },\r\n        [actions.EMPTY]({commit}) {\r\n            storage.remove(session.SESSION_USER_TAG)\r\n            commit(mutations.SAVE_USER_NAME, '')\r\n            commit(mutations.SAVE_NICK_NAME, '')\r\n            commit(mutations.SAVE_TOKEN, '')\r\n        },\r\n        [actions.GET_USER_INFO]({commit}) {\r\n            getUserInfo().then(resp => {\r\n\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default user"]},"metadata":{},"sourceType":"module"}